
@{
    ViewBag.Title = ResProductAnalysis.Index.lblTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
    ViewBag.Title = ResProductAnalysis.Index.lblTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>@ResProductAnalysis.Index.lblTitle</h3>
<ul class="breadcrumb hidden-phone">
    <li>
        <a href="~/Analysis/analysis.aspx">@ResProductAnalysis.Index.lblAnalysis</a>
        <span class="divider">/</span>
    </li>
    <li>
        <a href="@Request.RawUrl">@ResProductAnalysis.Index.lblTitle</a>
        <span class="divider">/</span>
    </li>
</ul>
@if (ViewBag.authR)
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
               $(document).ready(function () {
                   var CustomersArr = [];
                   var DepartmentsArr = [];
                   var TypeOfProductsArr = [];
                   var groupByPeriod = 1;
                   var graphType = 0;
                   var groupProds = true;

                $(function () {
                    $("[id*=txtEndDateStart]").datepicker({ dateFormat: 'dd/mm/yy' })
                });

                $(function () {
                    $("[id*=txtEndDateEnd]").datepicker({ dateFormat: 'dd/mm/yy' })
                });


                var enddate = new Date();
                var enddateStr = enddate.getDate() + "/"
                    + (enddate.getMonth()+1) + "/"
                    + enddate.getFullYear();
                $("#txtEndDateEnd").val(enddateStr);

                var startdate = new Date();
                startdate.setMonth(startdate.getMonth() - 1);
                var startdateStr = startdate.getDate() + "/"
                    + (startdate.getMonth() + 1) + "/"
                    + startdate.getFullYear();

                $("#txtEndDateStart").val(startdateStr);

                $("#txtEndDateStart").bind("propertychange change keyup paste input", function () {
                // load the page
                    var endPDateS = $('#txtEndDateStart').val();
                    var endPDateA = endPDateS.split('/');
                        startdate = new Date(endPDateA[2], endPDateA[1] - 1, endPDateA[0]);
                    if (startdate) {
                        loadPanel();
                    }
                    else {
                        alert("Invalid date");
                    }
                });

                $("#txtEndDateEnd").bind("propertychange change keyup paste input", function () {
                    // load the page
                        var endPDateS = $('#txtEndDateEnd').val();
                        var endPDateA = endPDateS.split('/');
                        enddate = new Date(endPDateA[2], endPDateA[1] - 1, endPDateA[0]);
                    if (enddate) {
                        loadPanel();
                    }
                    else {
                        alert("Invalid date");
                    }
                });



                function loadPanel() {
                    $("#HistoricPanel").fadeTo(0, 0.5);
                    $("#txtEndDateStart").prop("disabled", true);
                    $("#txtEndDateEnd").prop("disabled", true);

                    var startPeriod = startdate.getFullYear() + "-" +
                        (startdate.getMonth() + 1) + "-" + startdate.getDate();
                    var endPeriod = enddate.getFullYear() + "-" +
                        (enddate.getMonth() + 1) + "-" + enddate.getDate();

                    var jsonData = {
                        "StartPeriod": startPeriod, "EndPeriod": endPeriod, "Customer": {}};

                    var customersStr = "";
                    for (i = 0; i < CustomersArr.length; i++) {
                        customersStr += " " + CustomersArr[i];
                    }

                    var departmentsStr = "";
                    for (i = 0; i < DepartmentsArr.length; i++) {
                        departmentsStr += DepartmentsArr[i] + ";";
                    }

                    var TypeOfProductsStr = "";
                    for (i = 0; i < TypeOfProductsArr.length; i++) {
                        TypeOfProductsStr += TypeOfProductsArr[i][0] + "_"
                            + TypeOfProductsArr[i][1]
                            + "_" + TypeOfProductsArr[i][2]
                            + ";";
                    }
                    //alert(customersStr);

                    $.ajax({
                        url: "@Url.Action("ProductDataPanel", "ProductAnalysis")",
                        type: 'POST',
                        dataType: "html",
                        data: {
                            startPeriod: startPeriod,
                            endPeriod: endPeriod,
                            customers: customersStr,
                            departments: departmentsStr,
                            TypeOfProducts: TypeOfProductsStr,
                            GroupProducts: groupProds,
                            periodType: groupByPeriod,
                            graphType: graphType
                        },
                    success: function (result) {
                        $("#HistoricPanel").html(result);
                        $("#HistoricPanel").fadeTo(0, 1);
                        $("#txtEndDateStart").prop("disabled", false);
                        $("#txtEndDateEnd").prop("disabled", false);
                    },
                    error: function (result) {
                        alert("Error");
                        $("#HistoricPanel").fadeTo(0, 1);
                        $("#txtEndDateStart").prop("disabled", false);
                        $("#txtEndDateEnd").prop("disabled", false);
                        //$("#frmListWorkstations").html("Error");
                    },
                    warning: function (result) {
                        alert("Warning");
                        $("#HistoricPanel").fadeTo(0, 1);
                        $("#txtEndDateStart").prop("disabled", false);
                        $("#txtEndDateEnd").prop("disabled", false);
                        //$("#frmListWorkstations").html("Warning");
                    }
                });
                }


                //$("#frmCustomersList").hide();
                /*$("#btnShowCustomerPanel").click(function () {
                    if ($("#frmCustomersList").is(':visible')) {
                        $("#frmCustomersList").fadeOut();
                    }
                    else {
                        $("#frmCustomersList").fadeIn();
                    }
                });*/

                   $("#collapseCustomers :checkbox").each(function () {
                       var badgeOrig = $(this).attr('id').split('_');
                       var cst = badgeOrig[1];
                       CustomersArr.push(cst);
                   });

                   $("#collapseCustomers :checkbox").change(function () {
                       var badgeOrig = $(this).attr('id').split('_');
                       var id = badgeOrig[1];
                       var name = $("#customerName_" + id).text();
                       if ($(this).is(":checked")) {
                           CustomersArr.push(id);
                           loadPanel();
                       }
                       else {
                           var index = $.inArray(id, CustomersArr);
                           if (index >= 0) CustomersArr.splice(index, 1);

                           loadPanel();
                       }
                   });

                   //TypeOfProducts filter
                   //$("#frmProductsList").hide();
                   /*$("#btnShowProductsPanel").click(function () {
                       if ($("#frmProductsList").is(':visible')) {
                           $("#frmProductsList").fadeOut();
                       }
                       else {
                           $("#frmProductsList").fadeIn();
                       }
                   });*/
                   $("#collapseTypeOfProducts :checkbox").each(function () {
                       var badgeOrig = $(this).attr('id').split('_');
                       var badgeOrig2 = badgeOrig[1].split(';');
                       var cst = [badgeOrig2[0], badgeOrig2[1], badgeOrig2[2]];
                      // TypeOfProductsArr.push(cst);
                   });

                   $("#collapseTypeOfProducts :radio").change(function () {
                       if ($(this).val() == "1") {
                           groupProds = true;
                           $("#productFilterPanel").fadeOut();
                       }
                       else {
                           groupProds = false;
                           $("#productFilterPanel").fadeIn();
                       }
                       loadPanel();
                   });

                   $("#collapseTypeOfProducts :checkbox").change(function () {
                       var badgeOrig = $(this).attr('id').split('_');
                       var badgeOrig2 = badgeOrig[1].split(';');
                       var id = badgeOrig[1];
                       var ids = [badgeOrig2[0], badgeOrig2[1], badgeOrig2[2]];
                       //var name = $("#productName_" + id).text();
                       if ($(this).is(":checked")) {
                           TypeOfProductsArr.push(ids);
                       }
                       else {
                           var index = -1;
                           for (var i = 0; i < TypeOfProductsArr.length; i++) {
                               if (TypeOfProductsArr[i][0] == badgeOrig2[0] && TypeOfProductsArr[i][1] == badgeOrig2[1] && TypeOfProductsArr[i][2] == badgeOrig2[2]) {

                                   index = i;
                                   break;
                               }
                           }
                           if (index >= 0) TypeOfProductsArr.splice(index, 1);
                       }
                       loadPanel();
                   });

                   // Departments filter
                   //$("#frmDepartmentsList").hide();
                   /*$("#btnShowDepartmentsPanel").click(function () {
                       if ($("#frmDepartmentsList").is(':visible')) {
                           $("#frmDepartmentsList").fadeOut();
                       }
                       else {
                           $("#frmDepartmentsList").fadeIn();
                       }
                   });*/
                   $("#collapseDepartments :checkbox").each(function () {
                       var badgeOrig = $(this).attr('id').split('_');
                       var cst = badgeOrig[1];
                       DepartmentsArr.push(cst);
                   });
                   $("#collapseDepartments :checkbox").change(function () {
                       var badgeOrig = $(this).attr('id').split('_');
                       var id = badgeOrig[1];
                       var name = $("#departmentName_" + id).text();
                       if ($(this).is(":checked")) {
                           DepartmentsArr.push(id);
                       }
                       else {
                           var index = $.inArray(id, DepartmentsArr);
                           if (index >= 0) DepartmentsArr.splice(index, 1);
                       }
                       loadPanel();
                   });

                   $("#frmGraphType :radio").change(function () {
                       if ($(this).val() == "0") {
                           graphType = 0;
                       }
                       else if ($(this).val() == "1") {
                           graphType = 1;
                       }
                       else if ($(this).val() == "2") {
                           graphType = 2;
                       }
                       else if ($(this).val() == "3") {
                           graphType = 3;
                       }
                       else if ($(this).val() == "4") {
                           graphType = 4;
                       }
                       else {
                           graphType = 0;
                       }
                       loadPanel();
                   });

                   $("#collapsePeriods :radio").change(function () {
                       if ($(this).val() == "0") {
                           groupByPeriod = 0;
                       }
                       else if ($(this).val() == "1") {
                           groupByPeriod = 1;
                       }
                       else {
                           groupByPeriod = 2;
                       }
                       loadPanel();
                   });


                   $("#productFilterPanel").hide();
                   loadPanel();
               });
    </script>
 
    <div class="container-fluid">
        <div class="row-fluid">
            <div class="span3">
                <div class="well sidebar-nav sidebar-nav-fixed">
                    @ResProductAnalysis.Index.lblFilterSelection
                    <p>
                        <div class="accordion" id="accordionExample">
                            <div class="card">
                                <div class="card-header" id="headingDates">
                                    <h5 class="mb-0">
                                        <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseEndProductionDates" aria-expanded="true" aria-controls="collapseEndProductionDates">
                                            @ResProductAnalysis.Index.lblEndProductionDate
                                        </button>
                                    </h5>
                                </div>

                                <div id="collapseEndProductionDates" class="collapse show card" aria-labelledby="headingOne" data-parent="#accordionExample">
                                    @ResProductAnalysis.Index.lblStartDate
                                    <input type="text" id="txtEndDateStart" name="txtEndDateStart" /><br />
                                    @ResProductAnalysis.Index.lblEndDate
                                    <input type="text" id="txtEndDateEnd" name="txtEndDateStart" />
                                </div>
                            </div>
                            <div class="card">
                                <div class="card-header" id="headingPeriods">
                                    <h5 class="mb-0">
                                        <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapsePeriods" aria-expanded="true" aria-controls="collapsePeriods">
                                            @ResProductAnalysis.Index.lblGroupBy
                                        </button>
                                    </h5>
                                </div>

                                <div id="collapsePeriods" class="collapse show card" aria-labelledby="headingPeriods" data-parent="#accordionExample">
                                    <input type="radio" id="rdNone" name="rdGroupByPeriod" value="0" />@ResProductAnalysis.ProductPanel.lblNone<br />
                                    <input type="radio" id="rdNone" name="rdGroupByPeriod" value="1" checked />@ResProductAnalysis.ProductPanel.lblWeek<br />
                                    <input type="radio" id="rdNone" name="rdGroupByPeriod" value="2" />@ResProductAnalysis.ProductPanel.lblMonth<br />
                                </div>
                            </div>
                            <div class="card">
                                <div class="card-header" id="headingTypeOfProduct">
                                    <h5 class="mb-0">
                                        <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseTypeOfProducts" aria-expanded="true" aria-controls="collapseTypeOfProducts">
                                            @ResProductAnalysis.Index.lblTypesOfProducts
                                        </button>
                                    </h5>
                                </div>

                                <div id="collapseTypeOfProducts" class="collapse show" aria-labelledby="headingTypeOfProduct" data-parent="#accordionExample">
                                    <div class="card-body">
                                        <input type="radio" name="allproducts" id="allproducts" value="1" checked />@ResProductAnalysis.Index.lblProductGroupingSummarize<br />
                                        <input type="radio" name="allproducts" id="allproducts" value="0" />@ResProductAnalysis.Index.lblProductGroupingDivide<br />
                                        <div id="productFilterPanel">

                    <p></p>
                    @{
                        List<KIS.App_Code.ProcessoVariante> TypeOfProductList = ViewBag.TypeOfProducts;
                        foreach (var prod in TypeOfProductList)
                        {
                            <p>

                                <input class="form-check-input" type="checkbox" id="product_@prod.process.processID;@prod.process.revisione;@prod.variant.idVariante" />
                                <literal id="productName_@prod.process.processID;@prod.process.revisione;@prod.variant.idVariante">@Html.Raw(prod.process.processName + " - " + prod.variant.nomeVariante)</literal>
                            </p>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header" id="headingCustomers">
            <h5 class="mb-0">
                <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseCustomers" aria-expanded="true" aria-controls="collapseCustomers">
                    @ResProductAnalysis.Index.lblCustomers
                </button>
            </h5>
        </div>

        <div id="collapseCustomers" class="collapse show" aria-labelledby="headingCustomers" data-parent="#accordionExample">
            <div class="card-body">
                @{
                    List<KIS.App_Code.Cliente> cstList = ViewBag.Customers;
                    foreach (var cst in cstList)
                    {<p>
                            <input type="checkbox" id="customer_@cst.CodiceCliente" checked="checked" /><literal id="customerName_@cst.CodiceCliente">@Html.Raw(cst.RagioneSociale)</literal>
                        </p>
                    }
                }
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header" id="headingDepartments">
            <h5 class="mb-0">
                <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseDepartments" aria-expanded="true" aria-controls="collapseDepartments">
                    @ResProductAnalysis.Index.lblDepartments
                </button>
            </h5>
        </div>

        <div id="collapseDepartments" class="collapse show" aria-labelledby="headingDepartments" data-parent="#accordionExample">
            <div class="card-body">
                @{
                    List<KIS.App_Code.Reparto> DepartmentList = ViewBag.Departments;
                    foreach (var dept in DepartmentList)
                    {<p>
                            <input type="checkbox" id="department_@dept.id" checked="checked" /><literal id="departmentName_@dept.name">@Html.Raw(dept.name)</literal>
                        </p>
                    }
                }
            </div>
        </div>
    </div>
    </div>
    </p>
    </div>
    </div>
    <div class="span9">
        <div id="frmGraphType" class="form-inline">
            <input type="radio" name="GraphType" value="0" checked />@ResProductAnalysis.ProductPanel.lblQuantity
            <input type="radio" name="GraphType" value="1" />@ResProductAnalysis.ProductPanel.lblWorkingTime
            <input type="radio" name="GraphType" value="2" />@ResProductAnalysis.ProductPanel.lblUnitaryWorkingTime
            <input type="radio" name="GraphType" value="3" />@ResProductAnalysis.ProductPanel.lblMeanLeadTime
            <input type="radio" name="GraphType" value="4" />@ResProductAnalysis.ProductPanel.lblDelays
        </div>
        <div id="HistoricPanel" />
    </div>
    </div>
    </div>
}
else
{
    <div>
        @ResProductAnalysis.Index.lblUserNotAuthorized<br />
        <a href="/login/login.aspx?red=/Analysis/ProductAnalysis/Index">@ResProductAnalysis.Index.lblClickHere</a>
    </div>
}
