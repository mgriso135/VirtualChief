@model IEnumerable<KeyValuePair<string, double>>


@{
    ViewBag.Title = ResAnalysis.CausesCostList.lblTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>@ResAnalysis.CausesCostList.lblTitle</h3>
<ul class="breadcrumb hidden-phone">
    <li>
        <a href="~/Quality/Home/Index">@Resources.Shared.lblNavQuality</a><span class="divider"></span>
    </li>
    <li>
        <a href="~/Quality/Home/Index">@Resources.Shared.lblNavNonCompliancesAnalysis</a><span class="divider"></span>
    </li>
    <li>
        <a href="@Request.RawUrl">@ResAnalysis.CausesCostList.lblNavTitle</a><span class="divider"></span>
    </li>
</ul>
@if (ViewBag.authenticated)
{
    String strStartY = ((DateTime)ViewBag.startD).Year.ToString();
    String strStartD = ((DateTime)ViewBag.startD).Day < 10 ? "0" + ((DateTime)ViewBag.startD).Day.ToString() : ((DateTime)ViewBag.startD).Day.ToString();
    String strStartM = ((DateTime)ViewBag.startD).Month < 10 ? "0" + ((DateTime)ViewBag.startD).Month.ToString() : ((DateTime)ViewBag.startD).Month.ToString();
    String strEndY = ((DateTime)ViewBag.endD).Year.ToString();
    String strEndD = ((DateTime)ViewBag.endD).Day < 10 ? "0" + ((DateTime)ViewBag.endD).Day.ToString() : ((DateTime)ViewBag.endD).Day.ToString();
    String strEndM = ((DateTime)ViewBag.endD).Month < 10 ? "0" + ((DateTime)ViewBag.endD).Month.ToString() : ((DateTime)ViewBag.endD).Month.ToString();
    String strStart = strStartD + "/" + strStartM + "/" + strStartY;
    String strEnd = strEndD + "/" + strEndM + "/" + strEndY;
    String strStartRev = strStartY + "-" + strStartM + "-" + strStartD;
    String strEndRev = strEndY + "-" + strEndM + "-" + strEndD;

    <script>
        $(document).ready(function () {
            $(function () {
                $("[id*=txtDateStart]").datepicker({ dateFormat: 'dd/mm/yy' })
            });

            $(function () {
                $("[id*=txtDateEnd]").datepicker({ dateFormat: 'dd/mm/yy' })
            });

            $('#txtDateStart').attr("value", "@strStart");
            $('#txtDateEnd').attr("value", "@strEnd");

            function loadCauseProbability(start, end) {
                var start ="@strStart";
                var end = "@strEnd";

                var startS = start.split('/');
                var endS = end.split('/');

                var startD = new Date(startS[2], startS[1] - 1, startS[0]);
                var endD = new Date(endS[2], endS[1] - 1, endS[0]);

                $('#imgLoadCausesProbability').fadeIn();
                $.ajax({
                    url: "@Url.Action("CausesProbabilityList", "NonCompliancesAnalysis")",
                    type: 'GET',
                data:{
                    start: startD.getFullYear() + "-" + (startD.getMonth() + 1) + "-" + startD.getDate(),
                    end: endD.getFullYear() + "-" + (endD.getMonth() + 1)  + "-" + endD.getDate()
                },
                dataType: 'html',
                success: function(result) {
                    $('#imgCausesProbability').html(result);
                    $('#imgLoadCausesProbability').fadeOut();
                },
                error: function (result) { alert("Error loadCausesProbability "); },
                warning: function (result) { alert("Warning loadCausesProbability"); },
                });
        }

        function loadCauseRisk(start, end) {
            var start ="@strStart";
            var end = "@strEnd";

            var startS = start.split('/');
            var endS = end.split('/');

            var startD = new Date(startS[2], startS[1] - 1, startS[0]);
            var endD = new Date(endS[2], endS[1] - 1, endS[0]);

            $('#imgLoadCauseRisk').fadeIn();
            $.ajax({
                url: "@Url.Action("CausesRiskList", "NonCompliancesAnalysis")",
                type: 'GET',
            data:{
                start: startD.getFullYear() + "-" + (startD.getMonth() + 1) + "-" + startD.getDate(),
                end: endD.getFullYear() + "-" + (endD.getMonth() + 1)  + "-" + endD.getDate()
            },
            dataType: 'html',
            success: function(result) {
                $('#imgCausesRisk').html(result);
                $('#imgLoadCausesRisk').fadeOut();
            },
            error: function (result) { alert("Error loadCauseRisk "); },
            warning: function (result) { alert("Warning loadCauseRisk"); },
                    });
        }

        loadCauseRisk(@strStartRev, @strEndRev);
        loadCauseProbability(@strStartRev, @strEndRev);


            $('.btnSearch').click(function () {
                var start = $("#txtDateStart").val();
                var end = $("#txtDateEnd").val();

                var startS = start.split('/');
                var endS = end.split('/');

                var startD = new Date(startS[2], startS[1] - 1, startS[0]);
                var endD = new Date(endS[2], endS[1] - 1, endS[0]);

                var startY = startD.getFullYear();
                var startM = (startD.getMonth() + 1);
                if (startM < 10) { startM = "0" + startM; }
                var startG = startD.getDate();
                if (startG < 10) { startG = "0" + startG; }

                var endY = endD.getFullYear();
                var endM = (endD.getMonth() + 1);
                if (endM < 10) { endM = "0" + endM; }
                var endG = endD.getDate();
                if (endG < 10) { endG = "0" + endG; }

                if (startD < endD) {
                    window.location.href = "@Url.Action("CausesCostList", "NonCompliancesAnalysis")?start="
                        + startY + "-" + startM + "-" + startG + "&end="
                        + endY + "-" + endM + "-" + endG;
                }
                else {
                    alert("@ResAnalysis.CausesCostList.lblInputDateError");
                }
            });
        });
    </script>

    <div class="row-fluid">
        <div class="span12">
            @ResAnalysis.CausesCostList.lblDateStart
            <input type="text" id="txtDateStart" class="form-control" style="min-height: 30px; min-width:150px; max-width:150px;" />
            @ResAnalysis.CausesCostList.lblDateEnd
            <input type="text" id="txtDateEnd" class="form-control" style="min-height: 30px; min-width:150px; max-width:150px;" />
            <input type="image" src="~/img/iconView.png" style="min-width: 40px; max-width: 40px;" id="btnSearch" class="btnSearch" />
        </div>
    </div>
    if (Model != null && Model.Count() > 0)
    {
        <div class="row-fluid">
            <div class="span12">
                <img src="~/img/iconLoading.gif" id="imgLoadCausesRisk" style="width:40px;height: 40px;" />
                <div id="imgCausesRisk"></div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span12">
                <img src="~/img/iconLoading.gif" id="imgLoadCausesProbability" style="width:40px;height: 40px;" />
                <div id="imgCausesProbability"></div>
            </div>
        </div>


        <div class="row-fluid">
            <div class="span12">
                <h5>@ResAnalysis.CausesCostList.lblMeanCostTitle</h5>
                @ResAnalysis.CausesCostList.lblMeanCostDesc<br />
                <img id="imgCategoriesGraph" src="@Url.Action("CausesCostGraph", "NonCompliancesAnalysis")?start=@strStartRev&end=@strEndRev" />
                <table class="table table-bordered table-hover table-condensed">
                    <thead>
                        <tr>
                            <th>@ResAnalysis.CausesCostList.lblTHCauses</th>
                            <th>@ResAnalysis.CausesCostList.lblTHCost</th>
                        </tr>
                    </thead>
                    @foreach (KeyValuePair<string, double> m in Model)
                    {
                        if (m.Value < 10 * Math.Exp(10) && m.Value > 0)
                        {
                            <tr>
                                <td>@m.Key</td>
                                <td>@Math.Round(m.Value, 2) @ResAnalysis.CausesCostList.lblCurrency</td>
                            </tr>
                        }
                        else
                        {
                            <tr><td>@m.Key</td><td>@ResAnalysis.CausesCostList.lblErrValNotFeasible</td></tr>
                        }
                    }
                </table>
            </div>
        </div>
    }
    else
    {
        <div>@ResAnalysis.CausesCostList.lblNoCauses</div>
    }
}
else
{
    <div>@ResAnalysis.CausesCostList.lblErrNoAuth</div>
}