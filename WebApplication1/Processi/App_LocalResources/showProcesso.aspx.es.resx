<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblAddProdottoBlank" xml:space="preserve">
    <value>Añadir un nuevo proceso de producción vacio</value>
  </data>
  <data name="lblCopiaPostazioni" xml:space="preserve">
    <value>Copiar las estaciones de trabajo asignadas a las tareas</value>
  </data>
  <data name="lblCopiaProd" xml:space="preserve">
    <value>Copiar un proceso de producción existente</value>
  </data>
  <data name="lblCopiaReparti" xml:space="preserve">
    <value>Copiar los departamentos asignados a el proceso de proucción</value>
  </data>
  <data name="lblCopiaTempiCiclo" xml:space="preserve">
    <value>Copiar los Tiempos de ciclo</value>
  </data>
  <data name="lblDeleteKO1" xml:space="preserve">
    <value>Error: No se puede eliminar el proceso de producción. Se necesita de eliminar todos sub-procesos.</value>
  </data>
  <data name="lblDeleteKO2" xml:space="preserve">
    <value>Error: No se puede eliminar el proceso de producción. Se necesita de eliminar la asociación con todos los departamentos de producción en los que está presente.</value>
  </data>
  <data name="lblDeleteKO3" xml:space="preserve">
    <value>Advertencia: hay que eliminar todas las variantes antes del proceso de cancelación.</value>
  </data>
  <data name="lblDeleteOK" xml:space="preserve">
    <value>Proceso eliminado con éxito.</value>
  </data>
  <data name="lblDeleteProcess" xml:space="preserve">
    <value>Elimina el proceso de producción</value>
  </data>
  <data name="lblDescrizione" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="lblErrorCopy" xml:space="preserve">
    <value>Advertencia: ocurrió un error. El producto puede haber sido copiado parcialmente. Recargar la página y eliminar completamente el producto creado.</value>
  </data>
  <data name="lblErrorCreatingProcess" xml:space="preserve">
    <value>Y 'Ha ocurrido un error durante la creación del proceso de producción.</value>
  </data>
  <data name="lblErrorQueryString" xml:space="preserve">
    <value>No hay un proceso de producción con ese ID</value>
  </data>
  <data name="lblErrorUnknown" xml:space="preserve">
    <value>Se produjo un error inesperado.</value>
  </data>
  <data name="lblGoBackToFather" xml:space="preserve">
    <value>Volver al proceso padre</value>
  </data>
  <data name="lblGoToLineaProdotti" xml:space="preserve">
    <value>Volver a la lista de líneas de productos</value>
  </data>
  <data name="lblModificaOK" xml:space="preserve">
    <value>Editar ejecutado con éxito.</value>
  </data>
  <data name="lblNavAssociaProcPost" xml:space="preserve">
    <value>3. Asociar las tareas a las estaciones de trabajo</value>
  </data>
  <data name="lblNavAssociaProcRep" xml:space="preserve">
    <value>2. Asociar el departamento al proceso de producción</value>
  </data>
  <data name="lblNavCreaProc" xml:space="preserve">
    <value>1. Crear el proceso de producción</value>
  </data>
  <data name="lblNavDettaglioProc" xml:space="preserve">
    <value>Detalle proceso</value>
  </data>
  <data name="lblNavProcessMan" xml:space="preserve">
    <value>Process Manager</value>
  </data>
  <data name="lblNome" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="lblNuovoProcDefault" xml:space="preserve">
    <value>New Default Version</value>
  </data>
  <data name="lblNuovoProdotto" xml:space="preserve">
    <value>Nuevo producto</value>
  </data>
  <data name="lblPermessoKo" xml:space="preserve">
    <value>No hay el pormiso por ver y gestionar los procesos.</value>
  </data>
  <data name="lblPERT" xml:space="preserve">
    <value>PERT</value>
  </data>
  <data name="lblProdotto" xml:space="preserve">
    <value>Producto</value>
  </data>
  <data name="lblReqField" xml:space="preserve">
    <value>* Campo obligatorio</value>
  </data>
  <data name="lblRevisione1" xml:space="preserve">
    <value>Revisión</value>
  </data>
  <data name="lblRevisione2" xml:space="preserve">
    <value>fecha</value>
  </data>
  <data name="lblRiutilizzaTasks" xml:space="preserve">
    <value>Utiliza las tareas existentes</value>
  </data>
  <data name="lblSelProdotto" xml:space="preserve">
    <value>Seleccionar un producto</value>
  </data>
  <data name="lblTipoDiagramma" xml:space="preserve">
    <value>Tipo de gráfico</value>
  </data>
  <data name="lblTTAddProdottoBlank" xml:space="preserve">
    <value>Añadir un nuevo proceso de producción vacío</value>
  </data>
  <data name="lblTTCancellaProcessoProd" xml:space="preserve">
    <value>Eliminar el proceso de producción</value>
  </data>
  <data name="lblTTModifica" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="lblTTModificaProcessoProd" xml:space="preserve">
    <value>Editar el proceso de producción</value>
  </data>
  <data name="lblTTNONSalvaModifiche" xml:space="preserve">
    <value>NO guardar los cambios</value>
  </data>
  <data name="lblTTNuovoProcesso" xml:space="preserve">
    <value>Añadir una nueva revision del proceso de producción</value>
  </data>
  <data name="lblTTSalvaModifiche" xml:space="preserve">
    <value>Guardar cambios</value>
  </data>
  <data name="lblValueStream" xml:space="preserve">
    <value>Mapa de valor</value>
  </data>
  <data name="lblVSM" xml:space="preserve">
    <value>VSM</value>
  </data>
</root>