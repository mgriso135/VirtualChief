@model IEnumerable<KIS.App_Sources.AnalysisNCProduct>

@if (ViewBag.authenticated)
{
    if (Model != null && Model.Count() > 0)
    {
        if (Model.Count() > 0)
        {
            var lista2 = Model.GroupBy(m => new { m.ProcessID, m.ProcessRev, m.VariantID, m.NCQuantity, m.ProcessName, m.VariantName })
                            .Select(group => new { XAxys = group.Key.ProcessName + " - " + group.Key.VariantName, YAxys = group.Sum(s => s.NCQuantity) })
                            .OrderByDescending(x => x.YAxys)
                            .ToList();

            var vWidth = lista2.Count < 10 ? 600 : 100 + 50 * lista2.Count;
            var CustomTheme = "<Chart> "
      + "<ChartAreas>"
      + "  <ChartArea Name=\"Default1\" _Template_=\"All\">"
      + "     <AxisY>"
      + "       <LabelStyle Font=\"Verdana, 12px\" />"
      + "   </AxisY>"
      + "   <AxisX LineColor = \"64, 64, 64, 64\" Interval = \"1\">"
      + "       <LabelStyle Font = \"Verdana, 12px\" />"
      + "   </AxisX>"
      + "   </ChartArea>"
     + " </ChartAreas>"
       + "<Series>"
        + "<Series IsValueShownAsLabel=\"true\" Name = \"DefaultParetoCategories\" BorderWidth=\"3\" >"
        + " </Series>"
      + " </Series>"
       + "<Legends>"
       + "  <Legend />"
     + "  </Legends>"
    + " </Chart>";

            var myChart = new Chart(width: vWidth, height: 400, theme: CustomTheme)
            .AddTitle(ResAnalysis.ProductsNumberGraph.lblTitle);

            myChart.AddSeries("DefaultParetoCategories", chartType: "column",
        xValue: lista2, xField: "XAxys",
        yValues: lista2, yFields: "YAxys", markerStep: 1
        );
            myChart.Write();

        }
    }
}
else
{
    <div>@ResAnalysis.ProductsNumberGraph.lblErrNoAuth</div>
}
