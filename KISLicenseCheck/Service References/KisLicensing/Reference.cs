//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KISLicenseCheck.KisLicensing {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KisLicensing.LicensingSoap")]
    public interface LicensingSoap {
        
        // CODEGEN: Generazione di un contratto di messaggio perché il nome di elemento CheckLicenseResult dallo spazio dei nomi http://tempuri.org/ non è contrassegnato come nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckLicense", ReplyAction="*")]
        KISLicenseCheck.KisLicensing.CheckLicenseResponse CheckLicense(KISLicenseCheck.KisLicensing.CheckLicenseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckLicense", ReplyAction="*")]
        System.Threading.Tasks.Task<KISLicenseCheck.KisLicensing.CheckLicenseResponse> CheckLicenseAsync(KISLicenseCheck.KisLicensing.CheckLicenseRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckLicenseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckLicense", Namespace="http://tempuri.org/", Order=0)]
        public KISLicenseCheck.KisLicensing.CheckLicenseRequestBody Body;
        
        public CheckLicenseRequest() {
        }
        
        public CheckLicenseRequest(KISLicenseCheck.KisLicensing.CheckLicenseRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class CheckLicenseRequestBody {
        
        public CheckLicenseRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckLicenseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckLicenseResponse", Namespace="http://tempuri.org/", Order=0)]
        public KISLicenseCheck.KisLicensing.CheckLicenseResponseBody Body;
        
        public CheckLicenseResponse() {
        }
        
        public CheckLicenseResponse(KISLicenseCheck.KisLicensing.CheckLicenseResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CheckLicenseResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string CheckLicenseResult;
        
        public CheckLicenseResponseBody() {
        }
        
        public CheckLicenseResponseBody(string CheckLicenseResult) {
            this.CheckLicenseResult = CheckLicenseResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LicensingSoapChannel : KISLicenseCheck.KisLicensing.LicensingSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicensingSoapClient : System.ServiceModel.ClientBase<KISLicenseCheck.KisLicensing.LicensingSoap>, KISLicenseCheck.KisLicensing.LicensingSoap {
        
        public LicensingSoapClient() {
        }
        
        public LicensingSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicensingSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicensingSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicensingSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KISLicenseCheck.KisLicensing.CheckLicenseResponse KISLicenseCheck.KisLicensing.LicensingSoap.CheckLicense(KISLicenseCheck.KisLicensing.CheckLicenseRequest request) {
            return base.Channel.CheckLicense(request);
        }
        
        public string CheckLicense() {
            KISLicenseCheck.KisLicensing.CheckLicenseRequest inValue = new KISLicenseCheck.KisLicensing.CheckLicenseRequest();
            inValue.Body = new KISLicenseCheck.KisLicensing.CheckLicenseRequestBody();
            KISLicenseCheck.KisLicensing.CheckLicenseResponse retVal = ((KISLicenseCheck.KisLicensing.LicensingSoap)(this)).CheckLicense(inValue);
            return retVal.Body.CheckLicenseResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KISLicenseCheck.KisLicensing.CheckLicenseResponse> KISLicenseCheck.KisLicensing.LicensingSoap.CheckLicenseAsync(KISLicenseCheck.KisLicensing.CheckLicenseRequest request) {
            return base.Channel.CheckLicenseAsync(request);
        }
        
        public System.Threading.Tasks.Task<KISLicenseCheck.KisLicensing.CheckLicenseResponse> CheckLicenseAsync() {
            KISLicenseCheck.KisLicensing.CheckLicenseRequest inValue = new KISLicenseCheck.KisLicensing.CheckLicenseRequest();
            inValue.Body = new KISLicenseCheck.KisLicensing.CheckLicenseRequestBody();
            return ((KISLicenseCheck.KisLicensing.LicensingSoap)(this)).CheckLicenseAsync(inValue);
        }
    }
}
