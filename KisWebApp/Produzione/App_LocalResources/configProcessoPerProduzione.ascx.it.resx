<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblBtnLanciaProd" xml:space="preserve">
    <value>Lancia il prodotto così configurato in produzione!</value>
  </data>
  <data name="lblDataConsegna" xml:space="preserve">
    <value>Data prevista consegna</value>
  </data>
  <data name="lblDataFine" xml:space="preserve">
    <value>Data prevista fine produzione</value>
  </data>
  <data name="lblEarlyFinish" xml:space="preserve">
    <value>Early finish</value>
  </data>
  <data name="lblEarlyStart" xml:space="preserve">
    <value>Early start</value>
  </data>
  <data name="lblErrorBindingDates" xml:space="preserve">
    <value>Attenzione: non sono riuscito a fissare delle date per tutti i task. Variare la data di fine produzione oppure variare l'impostazione relativa alla suddivisione dei task tra gli intervalli lavorativi.</value>
  </data>
  <data name="lblErroreGenerico" xml:space="preserve">
    <value>Errore generico</value>
  </data>
  <data name="lblErroreGiaLanciato" xml:space="preserve">
    <value>Prodotto già lanciato in produzione</value>
  </data>
  <data name="lblErroreReparto" xml:space="preserve">
    <value>Attenzione: è necessario associare il prodotto a uno o più reparti produttivi.</value>
  </data>
  <data name="lblErroreTempoInsuff" xml:space="preserve">
    <value>Attenzione: tempo a disposizione inferiore al Critical Path. Variare la data presunta di fine produzione. Verificare anche la data di consegna prevista.</value>
  </data>
  <data name="lblErroreTipoProd" xml:space="preserve">
    <value>Errore sul tipo di processo produttivo</value>
  </data>
  <data name="lblErrorNoPrecSucc" xml:space="preserve">
    <value>C'è qualche task \"orfano\" di almeno un precedente o un successivo</value>
  </data>
  <data name="lblErrorNoTC1" xml:space="preserve">
    <value>Errore: il task</value>
  </data>
  <data name="lblErrorNoTC2" xml:space="preserve">
    <value>non ha nemmeno un tempo ciclo definito. Non posso inserirlo tra le scelte possibili.</value>
  </data>
  <data name="lblErrorPostazione" xml:space="preserve">
    <value>A qualche task non è stata assegnata una postazione di lavoro di default</value>
  </data>
  <data name="lblErrorVSM" xml:space="preserve">
    <value>Il tipo di digramma non è un PERT. Impossibile lanciare in produzione un diagramma di questo tipo</value>
  </data>
  <data name="lblLateFinish" xml:space="preserve">
    <value>Late finish</value>
  </data>
  <data name="lblLateStart" xml:space="preserve">
    <value>Late start</value>
  </data>
  <data name="lblNomeTask" xml:space="preserve">
    <value>Nome Task</value>
  </data>
  <data name="lblNumOp" xml:space="preserve">
    <value>Numero operatori</value>
  </data>
  <data name="lblPermessoKo" xml:space="preserve">
    <value>Errore: non hai il permesso di pianificare un prodotto in produzione.</value>
  </data>
  <data name="lblPianificaOk" xml:space="preserve">
    <value>Prodotto inserito correttamente in produzione.</value>
  </data>
  <data name="lblPostazione" xml:space="preserve">
    <value>Postazione</value>
  </data>
  <data name="lblQuantita" xml:space="preserve">
    <value>Quantità</value>
  </data>
  <data name="lblReparto" xml:space="preserve">
    <value>Reparto</value>
  </data>
  <data name="lblRevisione" xml:space="preserve">
    <value>Revisione</value>
  </data>
  <data name="lblSetup" xml:space="preserve">
    <value>Tempo di setup</value>
  </data>
  <data name="lblTaskID" xml:space="preserve">
    <value>Task ID</value>
  </data>
  <data name="lblTaskPrecedenti" xml:space="preserve">
    <value>Tasks precedenti</value>
  </data>
  <data name="lblTaskSuccessivi" xml:space="preserve">
    <value>Tasks successivi</value>
  </data>
  <data name="lblTempoCiclo" xml:space="preserve">
    <value>Tempo ciclo</value>
  </data>
  <data name="lblTitleCfg" xml:space="preserve">
    <value>Configura il processo per la produzione</value>
  </data>
  <data name="lblTTVerificaConfig" xml:space="preserve">
    <value>VERIFICA LA CONFIGURAZIONE</value>
  </data>
</root>